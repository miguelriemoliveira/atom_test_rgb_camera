<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- add sensor camera RIGHT part -->
  <xacro:macro name="sim_3dsensor" params="prefix">
    <!-- <gazebo reference="${prefix}_depth_frame">
      <sensor type="depth" name="camera">
        <always_on>true</always_on>
        <update_rate>20.0</update_rate>
        <camera>
          <horizontal_fov>${60.0*pi/180.0}</horizontal_fov>
          <image>
            <format>B8G8R8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.10</near>
            <far>8.0</far>
          </clip>
        </camera>
        <plugin name="${prefix}_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>${prefix}</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>10</updateRate>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <frameName>${prefix}_depth_optical_frame</frameName>
          <baseline>0.0</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
        </plugin>
      </sensor>
    </gazebo>
 -->

      <gazebo reference="${prefix}_depth_frame">
          <sensor type="depth" name="camera">
              <always_on>true</always_on>
              <update_rate>10.0</update_rate>
              <camera>
                  <horizontal_fov>${60.0*pi/180.0}</horizontal_fov>
                  <image>
                      <format>B8G8R8</format>
                      <!--                      <format>RGB_INT8</format>-->
                      <width>640</width>
                      <height>480</height>
                  </image>
                  <clip>
                      <near>0.10</near>
                      <far>8.0</far>
                  </clip>
              </camera>
              <plugin name="${prefix}_depth_camera_controller" filename="libgazebo_ros_openni_kinect.so">
                  <cameraName>${prefix}</cameraName>
                  <alwaysOn>true</alwaysOn>
                  <updateRate>10.0</updateRate>
                  <!--                                      <imageTopicName>rgb/image_raw</imageTopicName>-->

                  <imageTopicName>null</imageTopicName>
                  <cameraInfoTopicName>null/camera_info</cameraInfoTopicName>
                  <depthImageTopicName>depth/image_raw</depthImageTopicName>
                  <pointCloudTopicName>depth/points</pointCloudTopicName>
                  <!--                  <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>-->
                  <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
                  <frameName>${prefix}_depth_optical_frame</frameName>
                  <!--                  <frameName>${prefix}_rgb_optical_frame</frameName>-->
                  <!--                  <frameName>${prefix}_link</frameName>-->
                  <!-- Apparently this is not used-->
                  <baseline>0.1</baseline>
                  <!--                  <hackBaseline>2</hackBaseline>-->
                  <distortion_k1>0.0</distortion_k1>
                  <distortion_k2>0.0</distortion_k2>
                  <distortion_k3>0.0</distortion_k3>
                  <distortion_t1>0.0</distortion_t1>
                  <distortion_t2>0.0</distortion_t2>
                  <pointCloudCutoff>0.4</pointCloudCutoff>
              </plugin>
          </sensor>
      </gazebo>
      <gazebo reference="${prefix}_rgb_frame">
          <sensor type="camera" name="camera">
              <update_rate>30.0</update_rate>
              <camera>
                  <!--                    <pose>0 0 0 ${M_PI/2} ${-M_PI/2} 0</pose>-->
                  <horizontal_fov>${60.0*pi/180.0}</horizontal_fov>
                  <image>
                      <format>B8G8R8</format>
                      <!--                      <format>RGB_INT8</format>-->
                      <width>1200</width>
                      <height>800</height>
                  </image>
                  <clip>
                      <near>0.10</near>
                      <far>8.0</far>
                  </clip>
              </camera>
              <plugin name="${prefix}_rgb_camera_controller" filename="libgazebo_ros_camera.so">
                  <cameraName>${prefix}</cameraName>
                  <alwaysOn>true</alwaysOn>
                  <updateRate>0</updateRate>
                  <imageTopicName>rgb/image_raw</imageTopicName>
                  <!--                    <depthImageTopicName>depth/image_raw</depthImageTopicName>-->
                  <!--                    <pointCloudTopicName>depth/points</pointCloudTopicName>-->
                  <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
                  <!--                    <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>-->
                  <!--                    <frameName>${prefix}_depth_optical_frame</frameName>-->
                  <frameName>${prefix}_rgb_optical_frame</frameName>
                  <!--                  <frameName>${prefix}_link</frameName>-->
                  <!-- Apparently this is not used-->
                  <baseline>0.0</baseline>
                  <distortion_k1>0.0</distortion_k1>
                  <distortion_k2>0.0</distortion_k2>
                  <distortion_k3>0.0</distortion_k3>
                  <distortion_t1>0.0</distortion_t1>
                  <distortion_t2>0.0</distortion_t2>
                  <!--                    <pointCloudCutoff>0.4</pointCloudCutoff>-->
              </plugin>
          </sensor>
      </gazebo>
</xacro:macro>

</robot>